package homepage_lang.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new HTML_div_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new HTML_h2_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new HTML_h3_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new HTML_href_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new HTML_img_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new HTML_li_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new HTML_p_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new HTML_ul_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new Homepage_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new LinkToPage_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new LinkToWebAddress_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new MetaInfo_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new NavLink_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new Page_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new strong_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xbdbdd5ad46cd46f4L, 0x9c3602284b29d9f3L, 0xb13a0637e32b5ccL), MetaIdFactory.conceptId(0xbdbdd5ad46cd46f4L, 0x9c3602284b29d9f3L, 0xb13a0637e3188e8L), MetaIdFactory.conceptId(0xbdbdd5ad46cd46f4L, 0x9c3602284b29d9f3L, 0xb13a0637e33f6dbL), MetaIdFactory.conceptId(0xbdbdd5ad46cd46f4L, 0x9c3602284b29d9f3L, 0x354ee16775aa6e17L), MetaIdFactory.conceptId(0xbdbdd5ad46cd46f4L, 0x9c3602284b29d9f3L, 0x7320a3ba62fab23fL), MetaIdFactory.conceptId(0xbdbdd5ad46cd46f4L, 0x9c3602284b29d9f3L, 0xb13a0637e36bd11L), MetaIdFactory.conceptId(0xbdbdd5ad46cd46f4L, 0x9c3602284b29d9f3L, 0x354ee16775a697acL), MetaIdFactory.conceptId(0xbdbdd5ad46cd46f4L, 0x9c3602284b29d9f3L, 0xb13a0637e361afeL), MetaIdFactory.conceptId(0xbdbdd5ad46cd46f4L, 0x9c3602284b29d9f3L, 0x7320a3ba6306c90bL), MetaIdFactory.conceptId(0xbdbdd5ad46cd46f4L, 0x9c3602284b29d9f3L, 0x14db63a52948445aL), MetaIdFactory.conceptId(0xbdbdd5ad46cd46f4L, 0x9c3602284b29d9f3L, 0x14db63a52948445cL), MetaIdFactory.conceptId(0xbdbdd5ad46cd46f4L, 0x9c3602284b29d9f3L, 0x6c1d237276aa0e73L), MetaIdFactory.conceptId(0xbdbdd5ad46cd46f4L, 0x9c3602284b29d9f3L, 0x6c1d237276aa0e82L), MetaIdFactory.conceptId(0xbdbdd5ad46cd46f4L, 0x9c3602284b29d9f3L, 0x6c1d237276aa0e6dL), MetaIdFactory.conceptId(0xbdbdd5ad46cd46f4L, 0x9c3602284b29d9f3L, 0x354ee16775a937a2L)).seal();
}
