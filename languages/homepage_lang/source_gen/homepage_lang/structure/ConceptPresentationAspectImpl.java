package homepage_lang.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Folder;
  private ConceptPresentation props_HTML_IContent;
  private ConceptPresentation props_HTML_div;
  private ConceptPresentation props_HTML_h2;
  private ConceptPresentation props_HTML_h3;
  private ConceptPresentation props_HTML_href;
  private ConceptPresentation props_HTML_img;
  private ConceptPresentation props_HTML_li;
  private ConceptPresentation props_HTML_p;
  private ConceptPresentation props_HTML_ul;
  private ConceptPresentation props_Homepage;
  private ConceptPresentation props_ILink;
  private ConceptPresentation props_LinkToPage;
  private ConceptPresentation props_LinkToWebAddress;
  private ConceptPresentation props_MetaInfo;
  private ConceptPresentation props_Page;
  private ConceptPresentation props_strong;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Folder:
        if (props_Folder == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Folder = cpb.create();
        }
        return props_Folder;
      case LanguageConceptSwitch.HTML_IContent:
        if (props_HTML_IContent == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_HTML_IContent = cpb.create();
        }
        return props_HTML_IContent;
      case LanguageConceptSwitch.HTML_div:
        if (props_HTML_div == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("HTML_div");
          props_HTML_div = cpb.create();
        }
        return props_HTML_div;
      case LanguageConceptSwitch.HTML_h2:
        if (props_HTML_h2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("HTML_h2");
          props_HTML_h2 = cpb.create();
        }
        return props_HTML_h2;
      case LanguageConceptSwitch.HTML_h3:
        if (props_HTML_h3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("HTML_h3");
          props_HTML_h3 = cpb.create();
        }
        return props_HTML_h3;
      case LanguageConceptSwitch.HTML_href:
        if (props_HTML_href == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("HTML_href");
          props_HTML_href = cpb.create();
        }
        return props_HTML_href;
      case LanguageConceptSwitch.HTML_img:
        if (props_HTML_img == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("HTML_img");
          props_HTML_img = cpb.create();
        }
        return props_HTML_img;
      case LanguageConceptSwitch.HTML_li:
        if (props_HTML_li == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("HTML_li");
          props_HTML_li = cpb.create();
        }
        return props_HTML_li;
      case LanguageConceptSwitch.HTML_p:
        if (props_HTML_p == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("HTML_p");
          props_HTML_p = cpb.create();
        }
        return props_HTML_p;
      case LanguageConceptSwitch.HTML_ul:
        if (props_HTML_ul == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("HTML_ul");
          props_HTML_ul = cpb.create();
        }
        return props_HTML_ul;
      case LanguageConceptSwitch.Homepage:
        if (props_Homepage == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Homepage");
          props_Homepage = cpb.create();
        }
        return props_Homepage;
      case LanguageConceptSwitch.ILink:
        if (props_ILink == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ILink = cpb.create();
        }
        return props_ILink;
      case LanguageConceptSwitch.LinkToPage:
        if (props_LinkToPage == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("LinkToPage");
          props_LinkToPage = cpb.create();
        }
        return props_LinkToPage;
      case LanguageConceptSwitch.LinkToWebAddress:
        if (props_LinkToWebAddress == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("LinkToWebAddress");
          props_LinkToWebAddress = cpb.create();
        }
        return props_LinkToWebAddress;
      case LanguageConceptSwitch.MetaInfo:
        if (props_MetaInfo == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_MetaInfo = cpb.create();
        }
        return props_MetaInfo;
      case LanguageConceptSwitch.Page:
        if (props_Page == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Page = cpb.create();
        }
        return props_Page;
      case LanguageConceptSwitch.strong:
        if (props_strong == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("strong");
          props_strong = cpb.create();
        }
        return props_strong;
    }
    return null;
  }
}
